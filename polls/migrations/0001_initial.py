# Generated by Django 4.0.8 on 2022-12-02 16:49

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Blog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('writer', models.CharField(max_length=100)),
                ('pub_date', models.DateTimeField()),
                ('body', models.TextField()),
            ],
            options={
                'db_table': 'polls_blog',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Boxtr',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('flift', models.CharField(blank=True, max_length=50, null=True)),
                ('truck', models.CharField(blank=True, max_length=50, null=True)),
                ('arrival', models.CharField(blank=True, choices=[('07:30', '07:30'), ('08:00', '08:00'), ('08:30', '08:30'), ('09:00', '09:00'), ('09:30', '09:30'), ('10:00', '10:00'), ('10:30', '10:30'), ('11:00', '11:00'), ('11:30', '11:30'), ('12:00', '12:00'), ('12:30', '12:30'), ('13:00', '13:00'), ('13:30', '13:30'), ('14:00', '14:00'), ('14:30', '14:30'), ('15:00', '15:00'), ('15:30', '15:30'), ('16:00', '16:00'), ('16:30', '16:30'), ('17:00', '17:00'), ('17:30', '17:30'), ('18:00', '18:00'), ('18:30', '18:30'), ('19:00', '19:00')], max_length=50, null=True)),
                ('pub_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('wet', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], default='No', max_length=50, null=True)),
                ('box1', models.CharField(blank=True, choices=[('DN8_TILT', 'DN8_TILT'), ('YF_TILT', 'YF_TILT'), ('Height', 'Height'), ('LX2_10', 'LX2_10'), ('LX2_12', 'LX2_12'), ('JOEM', 'JOEM'), ('파워내장', '파워내장'), ('파워일반', '파워일반'), ('파워포장', '파워포장'), ('PU', 'PU'), ('XMA', 'XMA'), ('일반히터', '일반히터'), ('GPB', 'GPB'), ('GPG', 'GPG'), ('PS', 'PS'), ('기타', '기타')], max_length=50, null=True)),
                ('box1_qty', models.IntegerField(blank=True, choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15), (16, 16), (17, 17), (18, 18), (19, 19), (20, 20), (21, 21), (22, 22), (23, 23), (24, 24), (25, 25)], null=True)),
                ('box2', models.CharField(blank=True, choices=[('DN8_TILT', 'DN8_TILT'), ('YF_TILT', 'YF_TILT'), ('Height', 'Height'), ('LX2_10', 'LX2_10'), ('LX2_12', 'LX2_12'), ('JOEM', 'JOEM'), ('파워내장', '파워내장'), ('파워일반', '파워일반'), ('파워포장', '파워포장'), ('PU', 'PU'), ('XMA', 'XMA'), ('일반히터', '일반히터'), ('GPB', 'GPB'), ('GPG', 'GPG'), ('PS', 'PS'), ('기타', '기타')], max_length=50, null=True)),
                ('box2_qty', models.IntegerField(blank=True, choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15), (16, 16), (17, 17), (18, 18), (19, 19), (20, 20), (21, 21), (22, 22), (23, 23), (24, 24), (25, 25)], null=True)),
                ('box3', models.CharField(blank=True, choices=[('DN8_TILT', 'DN8_TILT'), ('YF_TILT', 'YF_TILT'), ('Height', 'Height'), ('LX2_10', 'LX2_10'), ('LX2_12', 'LX2_12'), ('JOEM', 'JOEM'), ('파워내장', '파워내장'), ('파워일반', '파워일반'), ('파워포장', '파워포장'), ('PU', 'PU'), ('XMA', 'XMA'), ('일반히터', '일반히터'), ('GPB', 'GPB'), ('GPG', 'GPG'), ('PS', 'PS'), ('기타', '기타')], max_length=50, null=True)),
                ('box3_qty', models.IntegerField(blank=True, choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15), (16, 16), (17, 17), (18, 18), (19, 19), (20, 20), (21, 21), (22, 22), (23, 23), (24, 24), (25, 25)], null=True)),
                ('box4', models.CharField(blank=True, choices=[('DN8_TILT', 'DN8_TILT'), ('YF_TILT', 'YF_TILT'), ('Height', 'Height'), ('LX2_10', 'LX2_10'), ('LX2_12', 'LX2_12'), ('JOEM', 'JOEM'), ('파워내장', '파워내장'), ('파워일반', '파워일반'), ('파워포장', '파워포장'), ('PU', 'PU'), ('XMA', 'XMA'), ('일반히터', '일반히터'), ('GPB', 'GPB'), ('GPG', 'GPG'), ('PS', 'PS'), ('기타', '기타')], max_length=50, null=True)),
                ('box4_qty', models.IntegerField(blank=True, choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15), (16, 16), (17, 17), (18, 18), (19, 19), (20, 20), (21, 21), (22, 22), (23, 23), (24, 24), (25, 25)], null=True)),
                ('box5', models.CharField(blank=True, choices=[('DN8_TILT', 'DN8_TILT'), ('YF_TILT', 'YF_TILT'), ('Height', 'Height'), ('LX2_10', 'LX2_10'), ('LX2_12', 'LX2_12'), ('JOEM', 'JOEM'), ('파워내장', '파워내장'), ('파워일반', '파워일반'), ('파워포장', '파워포장'), ('PU', 'PU'), ('XMA', 'XMA'), ('일반히터', '일반히터'), ('GPB', 'GPB'), ('GPG', 'GPG'), ('PS', 'PS'), ('기타', '기타')], max_length=50, null=True)),
                ('box5_qty', models.IntegerField(blank=True, choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12), (13, 13), (14, 14), (15, 15), (16, 16), (17, 17), (18, 18), (19, 19), (20, 20), (21, 21), (22, 22), (23, 23), (24, 24), (25, 25)], null=True)),
                ('status', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'polls_boxtr',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Boxtr_status',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('truck', models.CharField(blank=True, max_length=50, null=True)),
                ('arrival', models.CharField(blank=True, max_length=50, null=True)),
                ('pub_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('wet', models.CharField(blank=True, max_length=50, null=True)),
                ('box1', models.CharField(blank=True, max_length=50, null=True)),
                ('box1_qty', models.IntegerField(blank=True, null=True)),
                ('box2', models.CharField(blank=True, max_length=50, null=True)),
                ('box2_qty', models.IntegerField(blank=True, null=True)),
                ('box3', models.CharField(blank=True, max_length=50, null=True)),
                ('box3_qty', models.IntegerField(blank=True, null=True)),
                ('box4', models.CharField(blank=True, max_length=50, null=True)),
                ('box4_qty', models.IntegerField(blank=True, null=True)),
                ('box5', models.CharField(blank=True, max_length=50, null=True)),
                ('box5_qty', models.IntegerField(blank=True, null=True)),
                ('qty', models.IntegerField(blank=True, null=True)),
                ('status', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'boxtr_status',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Boxtr_stock',
            fields=[
                ('box', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('재고수량', models.IntegerField(blank=True, null=True)),
                ('입고예정', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'boxtr_stock',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Boxtr_sum',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('truck', models.CharField(blank=True, max_length=50, null=True)),
                ('arrival', models.CharField(blank=True, choices=[('07:30', '07:30'), ('08:00', '08:00'), ('08:30', '08:30'), ('09:00', '09:00'), ('09:30', '09:30'), ('10:00', '10:00'), ('10:30', '10:30'), ('11:00', '11:00'), ('11:30', '11:30'), ('12:00', '12:00'), ('12:30', '12:30'), ('13:00', '13:00'), ('13:30', '13:30'), ('14:00', '14:00'), ('14:30', '14:30'), ('15:00', '15:00'), ('15:30', '15:30'), ('16:00', '16:00'), ('16:30', '16:30'), ('17:00', '17:00'), ('17:30', '17:30'), ('18:00', '18:00'), ('18:30', '18:30'), ('19:00', '19:00')], max_length=50, null=True)),
                ('pub_date', models.DateTimeField(blank=True, null=True)),
                ('wet', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], default='No', max_length=50, null=True)),
                ('box_qty', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'boxtr_sum',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Rbkb_boxtr',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('user', models.CharField(blank=True, max_length=50, null=True)),
                ('pub_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('dn8_tilt', models.IntegerField(blank=True, null=True)),
                ('yf_tilt', models.IntegerField(blank=True, null=True)),
                ('height', models.IntegerField(blank=True, null=True)),
                ('joem', models.IntegerField(blank=True, null=True)),
                ('pw20', models.IntegerField(blank=True, null=True)),
                ('pw24', models.IntegerField(blank=True, null=True)),
                ('pwp', models.IntegerField(blank=True, null=True)),
                ('pu', models.IntegerField(blank=True, null=True)),
                ('xma', models.IntegerField(blank=True, null=True)),
                ('gpm', models.IntegerField(blank=True, null=True)),
                ('gpg', models.IntegerField(blank=True, null=True)),
                ('gpb', models.IntegerField(blank=True, null=True)),
                ('ps', models.IntegerField(blank=True, null=True)),
                ('lx2_10', models.IntegerField(blank=True, null=True)),
                ('lx2_12', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'polls_rbkb_boxtr',
                'managed': False,
            },
        ),
    ]
